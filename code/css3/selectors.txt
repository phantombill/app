


‚òÖ‚ñ∂‚ñ∫‚ñ¨‚Ä¢¬ª‚Ä∫‚ñ≤‚ô•‚ö†Ô∏èüí°¬±√ó√∑¬≤‚àöœÄ‚Å∞‚â†‚âà‚â§‚â•√ò‚àû‚úì‚úó‚úñ ‚Ç¨ ‚Üê ‚Üí ‚Üë ‚Üì ‚áÜ‚ô™¬©‚íπ‚Ä†‚Ç±‚Ä¶
‚òÖspecificity'selector-weight: (specific# ,> generic#).
  ‚Ä¢(#id, .class?:pseudoClass?[attr], tag?::pseudoElement).
    ‚Ä∫*?:where((#,#,#))=(0,0,0), :not((#,#,#))=(#,#,#).
    ‚Ä∫:is((#,#,#))=(0,0,1|0,1,0|0,0,1) = 1 heavy-specific-type.
‚òÖbasic: ‚Ä∫(0,0,0): s1s2‚Ä¶{1specificSelector} s1,s2,‚Ä¶{group} *{all}
  ‚Ä∫combinators(0,0,0): sParent>sChild{direct child}
    sAncestor sDescendant{}, ex[s0 s#{} ‚Üí s0 s1 s2 ‚Ä¶ s#{}].
    s1+s2{only next sibling} s1~s2{all subsequent siblings}
  ‚Ä∫tag{(0,0,1)} ‚Ä∫.classifyEls{(0,1,0)} ‚Ä∫#uniqueIdentify{(1,0,0)}
  ‚Ä∫attributes: (0,1,0)
    [att]
    [att = exact]      'exact'
    [att *= part]      '‚Ä¶part‚Ä¶'
    [att ~= spaceWord] '‚Ä¶ spaceWord ‚Ä¶'    (tilde~)
    [att |= dashWord]  '‚Ä¶-dashWord-‚Ä¶'
    [att ^= prefix]    'prefix‚Ä¶'          (caret^)
    [att $= sufix]     '‚Ä¶v'
    [‚Ä¶ i]              case insencitive lv4
‚òÖpseudoElement(0,0,1): part of el, basicSelector::onceInEnd.
  ‚ö†Ô∏èhistorical issues :?::(before after first-line first-letter)
  ::selection { // ‚â†Ios15
    color
    bg-color
    text-shadow?decorationCSS2
  }
  ::first-letter { // of line1 of #block-lvl-els
    ‚ö†Ô∏èselect all '"%&#@!*?/\.:,‚Ä¶;L) symbols connected to letter1
    vertical-align;
    font;
    text-shadow-*;
    transform-*;
    decoration-*;
    letter?word-spacing
    line-height;
    margin;
    padding;
    border;
    box-shadow;
    float;
    color;
    bg
  }
  ::first-line { // of #block-lvl-els
    <::first-letter>‚â†margin;
    padding;
    border;
    box-shadow;
    float
  }
  ::placeholder { // for input, textarea
    <::line1> -*;
    color: lightgray‚íπ;
  }
  ::before?after { // non-replaced-Els, ‚ö†Ô∏ècontent required
    display: inline‚íπ;
    ...;
    content: none| normal| [
      ''|
      <img>|
      attr()|
      open-quote| close-quote| no-open-quote| no-close-quote|
      counter(name, style?)|
      counters(name, 'nest separater', style?)
    ]‚Ä¶ / 'alt' // ‚â†S19F4
  }
    üí°.paren { // = child1
        counter-reset: none‚íπ | [name ¬±#0d?] ‚Ä¶;
      }
      .child {
        counter-increment: none‚íπ | [name ¬±#1d?] ‚Ä¶;
      }
      .child:nth-child(#) { //reset = set + 1
        counter-set: <reset>; //‚â†S19
        counter-reset: <reset>;
      }
    üí°style: disq circle square decimal?-leading-zero
        lower?upper-roman?alpha=latin
        lower-greek'Œ±Œ≤Œ≥ urdu'ar#-moz
  ::marker { // ‚â†S19
    content;
    color;
    font;
    white-space;
    direction;
    üí°apply to: li summary el?::pseudoEl { display: list-item }
  }
  ::cue?cue(selector) { // ::cue(selector) ‚â†F4
    üí°style vedio track.Vtt, bg apply individually to each cue
    bg;
    color;
    opacity;
    visibility;
    font;
    text-shadow-*;
    decoration?-*;
    line-height;
    white-space;
    outline
  }
  ::part(n1 ‚Ä¶) {} // from outside
    //<template> <shadowEl part='n1 ‚Ä¶'>
  ::slotted(*|1s‚â†combined) {} // from inside
    //<custom-el> <el slot>

‚òÖpseudoClass(0,1,0): elState. :lang(en){quotes; ‚Ä¶??} <el lang=>
  :not(s1,s2,‚Ä¶){}//s‚â†:not()?pseudoElement, :not((#,#,#))=(#,#,#)
  :is?where(s1,s2,‚Ä¶)//s‚â†::pseudoElement, forgiving-selector‚â†S19
    ‚Ä∫:where((#,#,#))=(0,0,0), :is((#,#,#))=(0,0,1|0,1,0|0,0,1)
  :defined{} <standard-el> <custom-el> who successfuly defined.
    :not(:defined){display:none} <custom-el> until parsing=100% <script src='//customElements.define()' defer>
  :host{} <custom-el>                  /*from inside shadowDOM*/
  :host(*|1s‚â†combined){}rel‚ÜíglobalDOM, S19‚â†slotted?:host>.local
  :host-context‚â†S19F4(*|1s‚â†combined){}//s=globalDOM.ancestor

 ‚Ä¢structure: :root{--cusom-property:val}<html>specificity(0,1,0)
  :empty{} ‚â†childEls|text+space, except comments|content=''
  :first?last?only-child{}     /*S19‚Üíbody‚â†parent, bad practice*/
    :nth-child?last-child(¬±an+b‚â•0|even?odd){}/*S19‚Üíbody‚â†parent*/
      ‚Ä∫ex :nth-child(5n+65):nth-child(-5n+80){}  /*65,70,75,80*/
  :first?last?only-of-type{}  /*relative to same siblings type*/
    :nth-of-type?last-of-type(an+b|even?odd){}

 *order: any-link> link> visited> hover> focus?-*> active.
 ‚Ä¢location: :scope{}/*inCss=:root, inJS=el who call the method*/
    //ex: el.querySelector?All|closest|matches(':scope>div')
  :any-link?link‚â†visited{}/*<a?area href=>,in S19 <link href=>*/
    :visited{color;bg-c;border-<side?>-c;outlne-c;column-rule-c;text-decoration?emphasis-c}{fill?stroke}  /*access History*/
  :target{}/*<el id=fragment> URL#fragment ‚Üê<a href=#fragment>*/
 ‚Ä¢user action: :hover{}/*after el?pseudoElement, mobile issues*/
  :focus?-within?-visible‚â†S19{}
    ‚Ä∫onClick?tab+Enter <a href=#fragment> focus <el id=fragment>
    :focus-within{}  /*= (el:focus) #and (el descendant:focus)*/
    :focus-visible‚â†S19{}| :focus:not(:f-visible){outline:none;‚Ä¶}
      ‚Ä∫if user set always-focus=visible in settings.
      ‚Ä∫user navigate by tab?arrow?key-keyboard ‚â† mouse?finger.
        <el accesskey55=B>, js93: el.accessKey='B'; usage: alt+B
        <el tabindex=¬±#‚â§32767>, +# before> +#+1 > 0, -#‚â†tabFocus
      ‚Ä∫els required keyboard to function as <input type=text?‚Ä¶>.
      ‚Ä∫script el.focus() after :focus-visible ‚â† :not(:f-visible)
  :active{}                                   /*while clicking*/

 ‚Ä¢input: :-webkit27-autofill{‚â† color|bg-image?color}.
  :placeholder-shown{} <input?textarea placeholder=>before input
  :disabled‚â†enabled{opacity:.3d}        <form-control disabled>:
    input button textarea select optgroup option fieldset‚â†Edge4
  :checked|+label{}/*=on:<i type=radio?checkox> <option>‚â†style*/
  :default|+label::after{content:' (default)'; ‚Ä¶}  /*+disabled*/
    ‚Ä∫<option selected>       <input type=radio?checkbox checked>
    ‚Ä∫first form <button type=sumbit‚íπ> or <i type=image?submit>
  :indeterminate|+label{} <progress> <i type=radio‚â†S19?checkbox>
    var c=document.querySelectorAll('[type=checkbox]');
    for (var i=0; i<c.length; i++) {c[i].indeterminate=true}
  :read-write{} <any-el‚â†input contenteditable>        <textarea>
    <input type=text?pw?email?tel?url?search?number?time's>
  :read-only{} <any-el‚â†input>          <input?textarea readonly>
    <input type=radio?checkbox?submit?image?file?range?color>
  :required‚â†optional{} <input?textarea?select required>
  :in‚â†valid{}  <i?textarea?select max?minlength‚â†select required>
    <i max?min?step?value=times-format patern=>           <form>
  :in-range‚â†out-of-range{} <i type=number?range?time's min?max=>

 ‚Ä¢extra: :fullscreen‚â†Ios14{} @page :first?left?right‚â†F4 {}
